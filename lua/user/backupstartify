local status_ok, lualine = pcall(require, "vim-startify")
if not status_ok then
	return
end


vim.cmd [[let g:startify_session_dir = '~/vimsessions/']] 
vim.cmd [[let g:startify_update_oldfiles = 1 ]]   -- Using this option updates it on-the-fly, so that :Startify is always up-to-date.
vim.cmd [[let g:startify_session_persistence = 1]] -- Automatically update sessions in two cases
vim.cmd [[let g:startify_session_delete_buffers = 1]] --Delete all buffers when loading or closing a session
vim.cmd [[let g:startify_change_to_dir = 1]] -- When opening a file or bookmark, change to its directory
vim.cmd [[let g:startify_padding_left = 3]] 
vim.cmd "let g:startify_custom_header = startify#fortune#boxed()"
vim.cmd [[let g:startify_relative_path = 1]] -- If the file is in or below the current working directory, use a relative path.Otherwise an absolute path is used 




let g:startify_session_dir = '~/vimsessions/'
let g:startify_update_oldfiles = 1    "Using this option updates it on-the-fly, so that :Startify is always up-to-date.
let g:startify_session_persistence = 1 "Automatically update sessions in two cases
let g:startify_session_delete_buffers = 1 "Delete all buffers when loading or closing a session
let g:startify_change_to_dir = 1 " When opening a file or bookmark, change to its directory
let g:startify_padding_left = 3
let g:startify_custom_header = startify#fortune#boxed()
let g:startify_relative_path = 1 "If the file is in or below the current working directory, use a relative path.Otherwise an absolute path is used 

